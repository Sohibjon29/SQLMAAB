USE class10;CREATE TABLE Orders (    OrderID INT PRIMARY KEY,    CustomerName VARCHAR(100),    OrderDate DATE);CREATE TABLE OrderDetails (    OrderDetailID INT PRIMARY KEY,    OrderID INT,    ProductName VARCHAR(100),    Quantity INT,    UnitPrice DECIMAL(10,2),    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID));INSERT INTO Orders VALUES     (1, 'Alice', '2024-03-01'),    (2, 'Bob', '2024-03-02'),    (3, 'Charlie', '2024-03-03');INSERT INTO OrderDetails VALUES     (1, 1, 'Laptop', 1, 1000.00),    (2, 1, 'Mouse', 2, 50.00),    (3, 2, 'Phone', 1, 700.00),    (4, 2, 'Charger', 1, 30.00),    (5, 3, 'Tablet', 1, 400.00),    (6, 3, 'Keyboard', 1, 80.00);SELECT ID as OrderID, CN as CustomerName, PN, UPFROM(SELECT od.OrderID as ID, o.CustomerName as CN, od.ProductName as PN, od.UnitPrice as UP, RANK() OVER(PARTITION BY od.OrderID ORDER BY od.UnitPrice DESC) as RankEDFROM OrderDetails as odJOIN Orders as oON o.OrderID=od.OrderID) as t1WHERE Ranked=1;WITH cte as (SELECT od.OrderID as ID, o.CustomerName as CN, od.ProductName as PN, od.UnitPrice as UP, DENSE_RANK() OVER(PARTITION BY od.OrderID ORDER BY od.UnitPrice DESC) as RankEDFROM OrderDetails as odJOIN Orders as oON o.OrderID=od.OrderID)SELECT ID as OrderID, CN as CustomerName, PN, UP FROM cteWHERE Ranked=1;SELECT o.OrderID, CustomerName,(SELECT max(UnitPrice)FROM OrderDetails as odWHERE od.OrderID=o.OrderID) as MaxPrice,(SELECT ProductNameFROM OrderDetails as odWHERE od.OrderID=o.OrderID AND od.UnitPrice=(SELECT max(UnitPrice)FROM OrderDetails as odWHERE od.OrderID=o.OrderID)) as ProdNameFROM Orders as o;CREATE TABLE TestMax(    Year1 INT    ,Max1 INT    ,Max2 INT    ,Max3 INT);INSERT INTO TestMax VALUES    (2001,10,101,87)    ,(2002,103,19,88)    ,(2003,21,23,89)    ,(2004,27,28,91);SELECT Year1, Greatest(Max1, Max2, Max3) as absmaxFROM TestMax;SELECT Year1, CASEWHEN Max1>Max2 THEN (CASE WHEN Max1>Max3 THEN Max1 ELSE Max3 END) ELSE (CASE WHEN Max2>Max3 THEN Max2 ELSE Max3 END)END as absmaxFROM TestMax;SELECT Year1,IIF(Max1>Max2, IIF(Max1>Max3, Max1, Max3), IIF(Max2>Max3, Max2, Max3)) as absmaxFROM TestMax;